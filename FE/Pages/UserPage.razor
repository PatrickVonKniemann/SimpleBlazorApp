@page "/users"

<PageTitle>Users</PageTitle>

@using FE.Services
@using Core.Models
@inject UserService UserService
@inject NavigationManager NavigationManager


<h1>Users</h1>

<p>This component demonstrates fetching user data from a service.</p>

@if (users == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (users.Any())
{
    <button class="btn btn-primary" @onclick="CreateUser">Create New User</button>
    <table class="table">
        <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Email</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var user in users)
        {
            <tr>
                <td>@user.Id</td>
                <td>@user.Name</td>
                <td>@user.Email</td>
                <td>
                    <button class="btn btn-info" @onclick="() => EditUser(user.Id)">Edit</button>
                    <button class="btn btn-danger" @onclick="() => DeleteUser(user.Id)">Delete</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <p>No users found.</p>
}

@code {
    private IEnumerable<UserReadDto>? users;

    protected override async Task OnInitializedAsync()
    {
        users = await UserService.GetAll();
    }

    private void CreateUser()
    {
        NavigationManager.NavigateTo("/user/add");
    }
    
    private void EditUser(int userId)
    {
        NavigationManager.NavigateTo($"/user/edit/{userId}");
    }

    private void DeleteUser(int userId)
    {
    // Implement user deletion logic here
    }

}